apiVersion: apps/v1
kind: Deployment
metadata:
  name: word-deploy
  namespace: word
spec:
  replicas: 1
  selector:
    matchLabels:
      app: word-deploy
      version: v1
  template:
    metadata:
      labels:
        app: word-deploy
        version: v1
    spec:
      affinity:
       nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - worker01
#                - samuel
#      affinity:
#        podAntiAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#          - labelSelector:
#              matchExpressions:
#              - key: app
#                operator: In
#                values:
#                - word-deploy
#            topologyKey: kubernetes.io/hostname
#      nodeSelector:
#        kubernetes.io/hostname: worker01
      containers:
      - image: wordpress:latest
        name: word-deploy
        ports:
        - containerPort: 80
#        resources:
#          limits:
#            cpu: 200m
#            memory: 512Mi
#          requests:
#            cpu: 100m
#            memory: 256Mi
        volumeMounts:
        - mountPath: /var/www/html/wp-config.php
          name: wp-config-volume
          subPath: wp-config.php
          readOnly: false
#       - mountPath: /var/www/html/wp-content/plugins/classic-editor
#         name: plugins-volume
#         readOnly: true
        - mountPath: /var/www/html
          name: wordpress-files
          readOnly: false
      volumes:
      - name: wp-config-volume
        configMap:
          name: word-config
      - name: plugins-volume
        emptyDir: {}
      - name: word-secret-volume
        secret:
          secretName: word-secret
      - name: wordpress-files
        persistentVolumeClaim:
          claimName: wordpress-pvc
      initContainers:
        - name: restore
          image: alpine:latest
          command: ["/bin/sh", "-c"]
          args:
          - |
            if [ ! -d "/var/www/html" ]; then
              apk add --no-cache curl
              curl -L https://dl.min.io/client/mc/release/linux-amd64/mc --create-dirs -o $HOME/minio-binaries/mc && \
              chmod +x $HOME/minio-binaries/mc && \
              export PATH=$PATH:$HOME/minio-binaries/ && \
              echo "restore needed"
              mc cp myminio/wordpress/wordpress_backup_2024-05-14.tar.gz /var/www/html/wordpress_backup.tar.gz
              tar -zxvf /var/www/html/wordpress_backup.tar.gz -C /var/www/html/
            else
              echo "restore not needed"
            fi
          volumeMounts:
          - mountPath: /var/www/html
            name: wordpress-files
          env:
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: access-key
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secret
                key: secret-key
          - name: RESTORE_TRUE
            valueFrom:
              configMapKeyRef:
                name: minio-config
                key: RESTORE_TRUE

