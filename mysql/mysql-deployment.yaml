apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: word
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
      - name: restore
        image: mysql:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          while true; do
              if [ "$RESTORE_ENABLED" = "true" ]; then
                  if [ "$MYSQL_DATABASE_RESTORE" = "wp1" ] && [ "$MYSQL_TABLE_RESTORE" = "wp1" ]; then
                      echo "db is restoring..."
                      mysql -u h 127.0.0.1 -u root -p"$MYSQL_ROOT_PASSWORD" "$MYSQL_DATABASE_RESTORE" < /docker-entrypoint-initdb.d/init.sql
                      restore_status=$?
                      echo $?
                      echo "restore completed."
                      break
                  else
                      echo "skipping restore."
                      break
                  fi
              fi
              sleep 5
          done
        volumeMounts:
        - name: restore-volume
          mountPath: /restore
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-init-script
          mountPath: /docker-entrypoint-initdb.d

        env:
        - name: MYSQL_TABLE_RESTORE
          valueFrom:
            configMapKeyRef:
              name: mysql-init-script
              key: MYSQL_TABLE_RESTORE
        - name: MYSQL_DATABASE_RESTORE
          valueFrom:
            configMapKeyRef:
              name: mysql-init-script
              key: MYSQL_DATABASE_RESTORE
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: MYSQL_DATABASE
        - name: RESTORE_ENABLED
          value: "true"

      containers:
      - name: mysql
        env:
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: MYSQL_DATABASE
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE_RESTORE
          valueFrom:
            configMapKeyRef:
              name: mysql-init-script
              key: MYSQL_DATABASE_RESTORE
        - name: MYSQL_TABLE_RESTORE
          valueFrom:
            configMapKeyRef:
              name: mysql-init-script
              key: MYSQL_TABLE_RESTORE
        image: mysql:latest
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-init-script
          mountPath: /docker-entrypoint-initdb.d

      restartPolicy: Always
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: mysql-data
        emptyDir: {}
      - name: mysql-init-script
        configMap:
          name: mysql-init-script
      - name: restore-volume
        emptyDir: {}
#         mountPath: /etc/mysql/conf.d
#       - name: mysql-init-script
#         mountPath: /etc/mysql/init.sql
#         subPath: init.sql
#     - name: mysql-config1
#       configMap:
#         name: mysql-config1
#     - name: mysql-init-script
#       configMap:
#         name: mysql-init-script
#        resources:
#          limits:
#            cpu: 200m
#            memory: 400Mi
#          requests:
#            cpu: 100m
#            memory: 370Mi
